Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dynamodbAccessRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:*
              Resource: "*"
            - Effect: Allow
              Action:
              - logs:*
              Resource: "*"
  InitFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          const AWS = require("aws-sdk");
          const response = require('./cfn-response');
          const docClient = new AWS.DynamoDB.DocumentClient();
      Handler: index.handler
      Role:
        Fn::GetAtt: [ LambdaRole , "Arn" ]
      Runtime: nodejs16.x
      Timeout: 60
  GraphRecommendations:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "Graph-Recommendations"
      AttributeDefinitions:
        -
          AttributeName: "username"
          AttributeType: "S"
        -
          AttributeName: "recommendation"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "username"
          KeyType: "HASH"
        -
          AttributeName: "recommendation"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST
  InitializeRecommendations:
    Type: Custom::InitFunction
    DependsOn: GraphRecommendations
    Properties:
      ServiceToken:
         Fn::GetAtt: [ InitFunction , "Arn" ]
      DynamoTableName:
        Ref: GraphRecommendations
